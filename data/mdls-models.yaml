# http://yaml-online-parser.appspot.com
Bdy:
  meta:
    baseClass  : D
    colNam     : bdys
    dNam       : Boundary
    dNamPlural : Boundaries
    dNamS      : bdy
    dNamSPlural: boundaries
  fields:
    bBox:
      dNam: Bound Box
      dNamS: bBox
      # type: [[float, float], [float, float]]
      type: dict
      note: {ne:northeast_latlng, sw:southwest_latlng] see stackoverflow.com/questions/2494756/fitbounds-in-google-maps-api-v3-does-not-fit-bounds
    par: # temporary field in this collection
      dNam: Parent bdy Slug value
      type: string
      note: Used to link this place to another boundary. Later will use field 'pars'
    ptCenter:
      dNam: Center Latitude/Longitude of All Polygons
      dNamS: centerPt
      type: Pt
    childCount:
      dNam: Child Items Count
      type: integer
      note: count of doors/items tagged with this bdy as par[ent].
    pts:
      dNam: Polygon Points
      dNamS: pts
      type: [[float, float]]
    typ: # temporary field in this collection. Will refactor to Typ class
      choices: [cong, cong-area, cong-terr, cong-terr-biz, cong-terr-closed]
Cmp:
  meta:
    desc       : Company
    colNam     : cnts
    dNam       : Company
    dNamPlural : Companies
    dNamS      : cmp
    dNamSPlural: cmps
  fields:
    _c:
      default: cmp
    cNam:
      dNam: Company Name
      type: string
      required: true
    cNamS:
      dNam: Short or Abbreviated Company Name
      type: string
    symbol:
      dNam: Company Trading Symbol
      type: string
      note: maybe just use base code field
Cnt:
  meta:
    baseClass  : D
    desc       : Base class for all Contacts
    colNam     : cnts
    dNam       : Contact
    dNamPlural : Contacts
    dNamS      : cnt
    dNamSPlural: cnts
  fields:
    _c:
      default: cnt
    emails:
      dNam: Emails
      desc: Emails.
      type: [Email]
    log:
      dNam: Log
      desc: Log.
      type: [Log]
    plcs:
      dNam: Places
      desc: Places.
      type: [Plc]
    rBy:
      dNam: Referred or Registered By
      type: ObjectID
    tels:
      dNam: Telephones
      desc: Telephones.
      type: [Tel]
D:
  meta:
    desc       : Base class
    colNam     : none
    dNam       : Document
    dNamPlural : Documents
    dNamS      : d
    dNamSPlural: ds
  fields:
    _c:
      dNam: Class Code
      desc: Class Code
      type: array
      required: true
    _eIds:
      dNam: Element Ids
      desc: Used to uniquely identify an item in a list.
      type: object
    _id:
      dNam: Mongo ObjectID
      desc: Unique ID
      type: ObjectID
      required: true
    code: # try to replace this with iDCode
      dNam: Code
      desc: Code.
      type: string
      note: Generic code
    cBy:
      dNam: Created By
      desc: Created by.
      type: ObjectID
      required: true
    cOn:
      dNam: When Created
      desc: When created.
      type: datetime
      required: true
      note: This is redundant because ObjectID has this information
    desc:
      dNam: Description
      type: string
    dId:
      dNam: Document Id
      desc: Unique auto-incremented ID.
      type: integer
      required: true
      note: This MAY be an issue with scaling in MongoDb
    dNam:
      dNam: Display Name
      desc: Default string displayed for document and in search results
      type: string
      required: true
      note: This is generated on a per class basis.
    dBy:
      dNam: Deleted By
      desc: Deleted by.
      type: ObjectID
    dOn:
      dNam: When Deleted
      desc: When deleted.
      type: datetime
    id:
      dNam: id
      desc: Unique base56 encoded string computed based on dId
      type: string
      note: This MAY be an issue with scaling in MongoDb
    iDCode:
      dNam: Id Code
      desc: Generic Code
      type: string
      note: Generic Code
    iDFloat:
      dNam: Float Id
      desc: Generic Float
      type: float
      note: Although javascript see all numbers the same you can use this field specifically for float/double numbers
    iDInt:
      dNam: Integer Id
      desc: Generic Integer
      type: integer
      note: Generic Integer
    nam:
      dNam: Name
      desc: Primary name/title of this doc.
      type: string
    namS:
      dNam: Short or Abbreviation of Name
      type: string
    note:
      dNam: Public Note
      desc: Public note.
      type: string
    noteAdmin:
      dNam: Administrator Note
      desc: Administrator note.
      type: string
    notePriv:
      dNam: Private Note
      desc: Private note.
      type: string
    oBy:
      dNam: Owned By
      desc: Owned by.
      type: ObjectID
      desc: Owned is determined by cBy (created by). Subsequently others by take ownership of this document.
    oOn:
      dNam: When Owned
      desc: Date and time owned subsequent to created date-time.
      type: datetime
    pBy:
      dNam: Published By
      desc: Published by.
      type: ObjectID
      desc: Owned is determined by cBy (created by). Subsequently others by take ownership of this document.
    pOn:
      dNam: When Published
      desc: When published.
      type: datetime
    slug:
      dNam: Slug
      desc: Unique auto-generated slug.
      type: string
      required: true
    status:
      dNam: Status Number Code
      desc: Status number used to indicate process steps down to 1 which indicated published.
      type: integer
    typ: # temporary field in this collection. Will refactor to Typ class
      dNam: Type of Place
      dNamS: typ
      type: string
      note: If people are not expected at this place, set typ == 'ptofref' point of reference for now.
    uBy:
      dNam: Updated By
      desc: Updated by.
      type: ObjectID
    uOn:
      dNam: When Updated
      desc: When updated.
      type: datetime
    valid:
      dNam: Verified/Valid
      type: boolean
    vBy:
      dNam: Verified By
      type: ObjectID
    vOn:
      dNam: When Verified
      type: datetime
    w:
      dNam: Sort Weight
      type: float
      note: Used to sort items grouped by par (territory)
Email:
  meta:
    baseClass  : ListBase
    desc       : One or emails
    colNam     : none
    dNam       : Email
    dNamPlural : Emails
    dNamS      : email
    dNamSPlural: emails
  fields:
    _c:
      default: email
    address:
      dNam: Email Address
      desc: Email address.
      type: string
    reg:
      dNam: User Registration Email
      type: boolean
ListBase: # previous name embed
  meta:
    baseClass  : D
    desc       : Base class for embedded lists.
    colNam     : none
    dNam       : ListBase
    dNamPlural : ListBases
    dNamS      : listbase
    dNamSPlural: listbases
    note       : Base class for embedding list of objects  ie  list of emails.
  fields:
    _eId:
      dNam: Element Id
      desc: Used to uniquely identify an item in a list.
      type: integer
    prim:
      dNam: Element Id
      desc: When multiple emails appear in a list. indicates which is prim. At most one may be prim.
      type: boolean
Loc:
  meta:
    baseClass  : D
    colNam     : locs
    dNam       : Locale
    desc       : Translated Words and Terms keyed off of <class.dNamS.dNamS>. For example Telephone type (tel.typ.dNamS).
    dNamPlural : Locales
    dNamS      : loc
    dNamSPlural: locs
  fields:
    _c:
      default: loc
    clsNamS:
      dNam: Short Class Name
      desc: Short class name like tel email etc
      type: string
      required: true
    group:
      dNam: Class Type Group
      desc: Perhaps a Class has more than one type like family status or hobbies or professions etc
      type: string
    key:
      dNam: Expression Key
      desc: Expression Key like tel.other tel.main email.personal etc
      type: string
    locStrs:
      dNam: Translated Locale String
      type: [LocStr]
LocStr:
  meta:
    baseClass  : D
    colNam     : locstrs
    dNam       : Locale String
    desc       : Translated Locale Strings
    dNamPlural : Locale Strings
    dNamS      : locstr
    dNamSPlural: locstrs
  fields:
    _c:
      default: locstr
    key:
      dNam: Expression Key
      desc: Expression Key like tel.other tel.main email.personal etc
      type: string
    lngIso:
      dNam: Language ISO Code
      desc: see www.loc.gov/standards/iso639-2/php/English_list.php
      type: string
      required: true
    locStrs:
      dNam: Translated Locale String
      type: [LocStr]
Note:
  meta:
    baseClass  : ListBase
    dNam       : Note
    dNamPlural : Notes
    dNamS      : note
    dNamSPlural: notes
  fields:
    _c:
      default: note
    title:
      dNam: Title or Subject
      type: string
      required: true
    # Note that body of note is maintained in base D note field
    noteHtml:
      dNam: Note HTML
      desc: Note parsed for rendering
      type: string
Par:
  meta:
    baseClass  : ListBase
    desc       : One or parent references other docs can be parents of subject Document.
    colNam     : none
    dNam       : Par
    dNamPlural : Pars
    dNamS      : par
    dNamSPlural: pars
    unique_with: [p_c, p_slug, c_role]
  fields:
    _c:
      default: par
    p_c:
      dNam: Parent Class
      type: string
    p_slug:
      dNam: Parent Slug
      type: string
    c_role:
      dNam: Child Role
      type: string
    c_mask:
      dNam: Child Role Mask
      type: string
    shr:
      dNam: Share Mask
      type: string
      desc: Possible way to further determine how to share.
Plc:
  meta:
    baseClass  : D
    colNam     : plcs
    dNam       : Place
    dNamPlural : Places
    dNamS      : plc
    dNamSPlural: plcs
  fields:
    addr: # temporary field in this collection
      dNam: Address
      type: string
      note: Street + <house number or apartment number>
    bdy:
      dNam: Boundary Slug
      type: string # temporary field in this collection
    langs: # temporary field in this collection
      dNam: Languages
      dNamS: langs
      type: list
      note: list of 'lngIso' codes, ie, en,es,fr,it, etc
    mkrCode:
      dNam: Marker Code
      desc: Number of attempts made to make contact
      dNamS: mkrCode
      type: integer
      min: 0
      max: 3
    mkrNo:
      dNam: Marker Number
      dNamS: mkrNo
      type: integer
    mkrOk:
      dNam: Marker Status
      desc: Marker ok status. Contact was made. Bottom-left flag on
      dNamS: mkrCode
      type: boolean
    pt:
      # dNam: Lng/Lat Coordinate
      dNam: Lat/Lng Coordinate
      dNamS: pt
      type: Pt
      desc: latitude, longitude, x,y
      note: see http://geojson.org/geojson-spec.html, choosing to use Google Map API format
Prs:
  meta:
    desc       : Person
    colNam     : cnts
    dNam       : Person
    dNamPlural : Persons
    dNamS      : prs
    dNamSPlural: prss
  fields:
    _c:
      default: prs
    bOn:
      dNam: Date-Time Born
      type: datetime
    fNam:
      dNam: First Name
      type: string
    fNam2:
      dNam: Second First Name
      type: string
    gen:
      dNam: Gender
      type: string
      format: tolower
      valid: m/f
    lNam:
      dNam: Last Name
      type: string
    lNam2:
      dNam: Second Last Name
      type: string
    prefix:
      dNam: Prefix
      desc: Prefix like Mr Mrs etc
      type: string
    suffix:
      dNam: Suffix
      desc: Suffix like MD DDS etc
      type: string
    fam:
      dNam: Family Status
      type: Typ
Pth:
  meta:
    baseClass  : ListBase
    desc       : One or parent references representing each ancestor to the top. For example, given subject document is a place named Atlanta and its role is office, you might have Pl.atlanta-ga.office, [Pl.atlanta-ga,Cmp.ni]
    colNam     : none
    dNam       : Pth
    dNamPlural : Pths
    dNamS      : pth
    dNamSPlural: pths
    unique_with: [p_c, p_slug, c_role]
  fields:
    _c:
      default: pth
    p_c:
      dNam: Class of Top Parent
      desc: For example, given subject document is a place named Atlanta
      type: string
    p_slug:
      dNam: Parent Slug
      type: string
    c_role:
      dNam: Child Role
      type: string
    pth:
      dNam: Path
      type: string
      desc: For example Cmp.ni.admin.11
    uris:
      dNam: URIs
      type: list
      desc: List of [p_c.p_slug.c_role] that represent a path to top parent.
Rdt:
  meta:
    baseClass  : D
    colNam     : none
    dNam       : Robust Date Time
    dNamPlural : Robust Date Times
    dNamS      : rdt
    dNamSPlural: rdts
    note       : Handle non-standard date and times
  fields:
    when:
      dNam: When
      type: string
    whenTyp:
      dNam: When Type
      type: Typ
Role:
  meta:
    baseClass  : D
    colNam     : roles
    dNam       : Role
    dNamPlural : Roles
    dNamS      : role
    dNamSPlural: roles
  fields:
    _c:
      default: role
    name:
      dNam: Role Name
      desc: Role name.
      type: string
      required: true
    desc:
      dNam: Description
      desc: Description.
      type: string
SN:
  meta:
    baseClass  : ListBase
    desc       : One or social networks
    colNam     : none
    dNam       : Social Network
    dNamPlural : Social Networks
    dNamS      : sn
    dNamSPlural: sns
  fields:
    _c:
      default: tel
    id:
      dNam: Net User or ID
      desc: Phone number.
      type: string
      required: true
    protocol:
      dNam: Protocol
      desc: Protocol such as aim msn yahoo skype qq gtalk icq jabber
      type: string
      required: true
Tel:
  meta:
    baseClass  : ListBase
    desc       : One or telephones
    colNam     : none
    dNam       : Telephone
    dNamPlural : Telephones
    dNamS      : tel
    dNamSPlural: tels
  fields:
    _c:
      default: tel
    text:
      dNam: Phone Number
      desc: Phone number.
      type: string
Typ:
  meta:
    baseClass  : D
    colNam     : typs
    dNam       : Type
    dNamPlural : Types
    dNamS      : typ
    dNamSPlural: typs
  fields:
    _c:
      default: typ
    locs: [LocStr]
    nam:
      dNam: Type Name
      type: string
      required: true
User:
  meta:
    desc       : User
    colNam     : cnts
    dNam       : User
    dNamPlural : Users
    dNamS      : user
    dNamSPlural: users
  fields:
    _c:
      default: user
    actv:
      dNam: Account Active
      type: boolean
    cfOn:
      dNam: When Account Confirmed
      type: datetime
    pw:
      dNam: Password
      type: string
    roles:
      dNam: Roles
      type: [Role]
    tkn:
      dNam: Token
      type: string
    uNam:
      dNam: User Name
      type: string
